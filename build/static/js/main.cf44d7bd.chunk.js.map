{"version":3,"sources":["components/MovieCard.js","services/movieData.js","services/movieAPI.js","components/Loading.js","pages/MovieList.js","components/MovieForm.js","pages/MovieDetails.js","pages/NewMovie.js","pages/EditMovie.js","pages/NotFound.js","components/Nav.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["MovieCard","movie","this","props","className","data-testid","src","imagePath","alt","title","subtitle","storyline","to","React","Component","movies","id","rating","bookmarked","genre","localStorage","setItem","JSON","stringify","data","readMovies","parse","getItem","saveMovies","simulateRequest","response","callback","setTimeout","getMovies","Promise","resolve","getMovie","movieName","find","mov","toLowerCase","updateMovie","updatedMovie","map","parseInt","createMovie","movieData","nextId","length","newMovie","deleteMovie","filter","status","Loading","MovieList","loadingFunc","a","movieAPI","setState","load","state","key","MovieForm","handleSubmit","bind","onSubmit","field","newValue","htmlFor","placeholder","type","value","onChange","event","target","rows","maxLength","step","min","max","onClick","autocomplete","renderTitleInput","renderSubtitleInput","renderImagePathInput","renderStorylineInput","renderGenreSelection","renderRatingInput","renderSubmitButton","defaultProps","undefined","MovieDetails","findMovie","match","params","filme","removeMovie","renderRatingIcon","console","log","class","NewMovie","shouldReturn","EditMovie","shouldRedirect","NotFound","Nav","Header","Footer","href","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf44d7bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './MovieCard.css';\n\nclass MovieCard extends React.Component {\n\n  render() {\n    const { movie } = this.props;\n    return (\n      <div className=\"movie-card\" data-testid=\"movie-card\">\n        <img className=\"movie-card-image\" src={ movie.imagePath } alt={ `Imagem de ${movie.title}` } />\n        <h4 className=\"card-title\">{ movie.title }</h4>\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{ movie.title }</h4>\n          <h5 className=\"movie-card-subtitle\">{ movie.subtitle }</h5>\n          <p className=\"movie-card-storyline\">{ movie.storyline }</p>\n        <Link className=\"movie-card-link\" to={ `/movies/${movie.title}` }>VER DETALHES</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    imagePath: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","const movies = [\n  {\n    id: 1,\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: '../images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 2,\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: '../images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    id: 3,\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: '../images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    id: 4,\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: '../images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 5,\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: '../images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import data from './movieData';\n\nlocalStorage.setItem('movies', JSON.stringify(data));\n\nconst readMovies = () => JSON.parse(localStorage.getItem('movies'));\nconst saveMovies = (movies) => localStorage.setItem('movies', JSON.stringify(movies));\n\nconst TIMEOUT = 1000;\nconst SUCCESS_STATUS = 'OK';\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getMovies = () => (\n  new Promise((resolve) => {\n    const movies = readMovies();\n    simulateRequest(movies)(resolve);\n  })\n);\n\nexport const getMovie = (movieName) => {\n  const movie = readMovies().find((mov) => mov.title.toLowerCase() === movieName.toLowerCase());\n  return new Promise((resolve) => {\n    simulateRequest(movie)(resolve);\n  });\n};\n\nexport const updateMovie = (updatedMovie) => (\n  new Promise((resolve) => {\n    const movies = readMovies().map((movie) => {\n      if (movie.id === parseInt(updatedMovie.id, 10)) {\n        return { ...movie, ...updatedMovie };\n      }\n      return movie;\n    });\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const createMovie = (movieData) => (\n  new Promise((resolve) => {\n    let movies = readMovies();\n    const nextId = movies[movies.length - 1].id + 1;\n    const newMovie = { ...movieData, id: nextId };\n    movies = [...movies, newMovie];\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const deleteMovie = (movieName) => {\n  let movies = readMovies();\n  movies = movies.filter((movie) => movie.title.toLowerCase() !== movieName.toLowerCase());\n  saveMovies(movies);\n\n  return new Promise((resolve) => {\n    simulateRequest({ status: SUCCESS_STATUS })(resolve);\n  });\n};\n","import React, { Component } from 'react';\nimport './Loading.css'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading-content\">\n        <div className=\"loadingio-spinner-spinner-mlqvu66n5hp\"><div className=\"ldio-l2v14tvyx9q\">\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\n        </div></div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport MovieCard from '../components/MovieCard';\nimport * as movieAPI from '../services/movieAPI';\nimport Loading from '../components/Loading';\nimport './MovieList.css';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      load: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadingFunc();\n  }\n\n  loadingFunc = async () => {\n    const { getMovies } = movieAPI;\n    const movies = await getMovies();\n    this.setState({\n      movies: [...movies],\n      load: false,\n    });\n  }\n\n  render() {\n    const { movies, load } = this.state;\n    if (load) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"movie-list\" data-testid=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_title\">\n          <input\n            placeholder=\"Insira o título\"\n            id=\"movie_title\"\n            type=\"text\"\n            className=\"validate\"\n            value={ title }\n            onChange={ (event) => this.updateMovie('title', event.target.value) }\n          />\n        </label>\n      </div>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_subtitle\">\n          <input\n            placeholder=\"Insira o subtítulo\"\n            id=\"movie_subtitle\"\n            type=\"text\"\n            className=\"validate\"\n            value={ subtitle }\n            onChange={ (event) => this.updateMovie('subtitle', event.target.value) }\n          />\n        </label>\n      </div>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_image\">\n          <input\n            placeholder=\"Insira o caminho da imagem\"\n            id=\"movie_image\"\n            type=\"text\"\n            value={ imagePath }\n            className=\"validate\"\n            onChange={ (event) => this.updateMovie('imagePath', event.target.value) }\n          />\n        </label>\n      </div>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_storyline\">\n          <textarea\n            id=\"movie_storyline\"\n            value={ storyline }\n            className=\"validate\"\n            placeholder=\"Insira a sinospe do filme\"\n            rows=\"4\"\n            maxLength=\"185\"\n            onChange={ (event) => this.updateMovie('storyline', event.target.value) }\n          />\n        </label>\n      </div>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_genre\">\n          <select\n            id=\"movie_genre\"\n            value={ genre }\n            className=\"validate\"\n            onChange={ (event) => this.updateMovie('genre', event.target.value) }\n          >\n            <option className=\"validate-option\" value=\"action\">Ação</option>\n            <option className=\"validate-option\" value=\"comedy\">Comédia</option>\n            <option className=\"validate-option\" value=\"thriller\">Suspense</option>\n            <option className=\"validate-option\" value=\"fantasy\">Fantasia</option>\n          </select>\n          Gênero\n        </label>\n      </div>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n    return (\n      <div className=\"input-container\">\n        <label htmlFor=\"movie_rating\">\n          <input\n            placeholder=\"Dê a avaliação do filme\"\n            id=\"movie_rating\"\n            type=\"number\"\n            step={ 0.1 }\n            className=\"validate\"\n            min={ 0 }\n            max={ 5 }\n            value={ rating }\n            onChange={ (event) => this.updateMovie('rating', event.target.value) }\n          />\n          Avaliação\n        </label>\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          className=\"form-button\"\n          onClick={ this.handleSubmit }\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"form\">\n        <form autocomplete=\"off\">\n          {this.renderTitleInput()}\n          {this.renderSubtitleInput()}\n          {this.renderImagePathInput()}\n          {this.renderStorylineInput()}\n          {this.renderGenreSelection()}\n          {this.renderRatingInput()}\n          {this.renderSubmitButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imagePath: PropTypes.string,\n    bookmarked: PropTypes.bool,\n    genre: PropTypes.string,\n  }),\n};\n\nMovieForm.defaultProps = {\n  movie: undefined,\n};\n\nexport default MovieForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nimport './MovieDetails.css';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      load: true,\n    };\n  }\n\n  componentDidMount() {\n    this.findMovie();\n  }\n\n  findMovie = async () => {\n    const { getMovie } = movieAPI;\n    const { match: { params: { id } } } = this.props;\n    const filme = await getMovie(id);\n    this.setState({\n      movie: { ...filme },\n      load: false,\n    });\n  }\n\n  removeMovie = (title) => {\n    const { deleteMovie } = movieAPI;\n    deleteMovie(title);\n  }\n\n  renderRatingIcon = (rating) => {\n    console.log(rating)\n    if(rating <= 2) {\n      return <i class=\"bi bi-thermometer-low\">Baixa</i> \n    } else if (rating > 2 && rating <= 4) {\n      return <i class=\"bi bi-thermometer-half\">Media</i>\n    } else {\n      return <i class=\"bi bi-thermometer-high\">Em Alta</i>\n    }\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const { movie } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle } = movie;\n    const { load } = this.state;\n\n    if (load) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"details-content\" data-testid=\"movie-details\">\n        <div className=\"img-content\">\n          <img className=\"image-hero\" alt=\"Movie Cover\" src={imagePath} />\n          <div className=\"fade-img\"></div>\n        </div>\n        <div className=\"info-details\">\n          <h4 className=\"title-detail\">{title}</h4>\n          <p className=\"subtitle-detail\">{subtitle}</p>\n          <p className=\"storyline-detail\">{ `Sinopse: ${storyline}` }</p>\n          <p className=\"genre-detail\">{ `Gênero: ${genre}` }</p>\n          <p className=\"rating-detail\">Relevância: { this.renderRatingIcon(rating) }</p>\n          <div className=\"buttons-detail\">\n            <Link className=\"back-btn\" to=\"/\"><i class=\"bi bi-chevron-double-left\"></i>VOLTAR</Link>\n            <Link className=\"edit-btn\" to={ `/movies/${title}/edit` }><i class=\"bi bi-pen-fill\"></i>EDITAR</Link>\n            <Link className=\"rm-btn\" onClick={ () => this.removeMovie(title) } to=\"/\"><i class=\"bi bi-trash-fill\"></i>DELETAR</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  }).isRequired,\n};\n\nexport default MovieDetails;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\nimport './NewMovie.css'\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldReturn: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(newMovie) {\n    const { createMovie } = movieAPI;\n    createMovie(newMovie);\n    this.setState({\n      shouldReturn: true,\n    });\n  }\n\n  render() {\n    const { shouldReturn } = this.state;\n\n    if (shouldReturn) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"form-new-movie\" data-testid=\"new-movie\">\n        <MovieForm onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\nexport default NewMovie;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\nimport './EditMovie.css';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.findMovie();\n  }\n\n  handleSubmit(updatedMovie) {\n    const { updateMovie } = movieAPI;\n    updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  findMovie = async () => {\n    const { getMovie } = movieAPI;\n    const { match: { params: { id } } } = this.props;\n    const filme = await getMovie(id);\n    this.setState({\n      movie: { ...filme },\n      status: '',\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"edit-content\" data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  }).isRequired,\n};\n\nexport default EditMovie;\n","import React, { Component } from 'react';\nimport './NotFound.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"not-found\" data-testid=\"404-error\">\n        <h2>Pagina não encontrada</h2>\n        <img src=\"https://media2.giphy.com/media/3oKIPdF5sBePN9DYFG/giphy.gif?cid=790b7611f2391e0fa5abc377fbc3a14f51fe041d187ea69a&rid=giphy.gif&ct=s\" alt='oi' />\n      </div>\n    )}\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\n\nclass Nav extends React.Component {\n  render() {\n    return (\n      <nav className=\"nav-bar\">\n          <Link className=\"nav-link\" to=\"/\"><i class=\"bi bi-house-fill\"></i>Home</Link>\n          <Link className=\"nav-link\" to=\"/movies/new\"><i class=\"bi bi-plus-square-fill\"></i>Adicionar filme</Link>\n          <Link className=\"nav-link\" to=\"/user\"><i class=\"bi bi-person-circle\"></i>Minha Conta</Link>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;","import React from 'react';\nimport Nav from './Nav';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <header className=\"movie-card-header\">\n          <Link to=\"/\">\n          <img className=\"header-image\" src=\"../images/CineSimbol.png\" alt=\"Projetor\" />\n          </Link>\n          <h1 className=\"page-title\">Movie Card Library CRUD</h1>\n        </header>\n        <Nav />\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer-content\">\n        <h3 className=\"footer-message\">\n          Conteúdo de projeto da Trybe® com confecção e adições de <a className=\"linkedin\" target=\"_blank\" href=\"https://www.linkedin.com/in/lucasfernandesreis/\"><i class=\"bi bi-linkedin\"></i>Lucas Fernandes</a>\n        </h3>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport MovieList from './pages/MovieList';\nimport MovieDetails from './pages/MovieDetails';\nimport NewMovie from './pages/NewMovie';\nimport EditMovie from './pages/EditMovie';\nimport NotFound from './pages/NotFound';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div class='Moises'>\n        <Header className=\"oi\"/>\n        <Switch>\n          <Route exact path=\"/\" component={ MovieList } />\n          <Route exact path=\"/movies/new\" component={ NewMovie } />\n          <Route exact path=\"/movies/:id/edit\" component={ EditMovie } />\n          <Route exact path=\"/movies/:id\" component={ MovieDetails } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n        </div>\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}